#!/bin/bash
set -e

# include dot-files (if present) when coping into mounted volumes
shopt -s dotglob

# if empty, copy apache2 configuration to volume
if [ ! "$(ls -A /etc/apache2)" ]; then
    cp -r  /usr/local/etc/apache2/* /etc/apache2
    echo "[info] copied apache2 configuration directory"
fi

# if Concrete5 is not yet installed, copy it into web root
if [ ! -e '/var/www/html/concrete/config/concrete.php' ]; then
    cd /var/www/html/
    if [ "$(ls -A /var/www/html)" ]; then
        echo "[warn] /var/www/html/ is not Empty. It contains:" 1>&2
        ls -A 1>&2
    fi
    echo "[info] Concrete5 Version: ${CONCRETE5_VERSION}"
    cp -r /usr/local/src/concrete${CONCRETE5_VERSION}/* /var/www/html

    # change required permissions incl. for multi-lingual sites
    chown -Rv root:www-data application/files/
    chmod -Rv 775 application/files/
    chown -Rv root:www-data application/config/
    chmod -Rv 775 application/config/
    chown -Rv root:www-data packages/
    chmod -Rv 775 packages/
    chown -Rv root:www-data updates/
    chmod -Rv 775 updates/
    mkdir -v  application/languages/site
    chown -Rv root:www-data application/languages/site
    chmod -Rv 775 application/languages/site
    echo "[info] copied Concrete5.8 and set permissions"
fi

# If Concrete5 Version is lower than the latest version replace it.
if [ -e '/var/www/html/concrete' ]; then
if [ ! -e "/var/www/html/concrete/config/concrete5_version_${CONCRETE5_VERSION}" ]; then
  # ensure we are in the html directory
  cd /var/www/html/
  # Delete the last Version
  rm -rf /var/www/html/concrete/*
  # update the concrete version
  cp -r /usr/local/src/concrete${CONCRETE5_VERSION}/concrete/* /var/www/html/concrete/
  # change the version file
  touch /var/www/html/concrete/config/concrete5_version_${CONCRETE5_VERSION}

  echo "[info] update copied Concrete " ${CONCRETE5_VERSION}
fi

fi

if [${PRODUCTION_MODE}]; then
  # ensure we are in the html directory
  cd /var/www/html/
  # If exists Replace repo
  if [ -e "/var/www/html/git" ]; then
  # Initialise the Git and clone from version online (set this yourself) You can get a token from your settings (OAuth or Special token)
  git clone https://[token]@gitlab.com/[username]/[repo].git /git/
  echo "[info] Cloned From Host"
  fi
  # If not
  if [ ! -e "/var/www/html/git" ]; then
  # Just update the content with master
  git pull https://[token]@gitlab.com/[username]/[repo].git /git/
  echo "[info] Pulled From Host"
  fi
  # If packages exists copy that file over the current file
  if [ -e "/var/www/html/git/packages"]; then
  yes | cp -rf /var/www/html/git/packages/* /var/www/html/packages/
  fi
  # If application exists copy that over the current file
  if [ -e "/var/www/html/git/application"]; then
  yes | cp -rf /var/www/html/git/packages/* /var/www/html/application/
  fi

fi

# else default to run whatever the user wanted like "bash"
exec "$@"
